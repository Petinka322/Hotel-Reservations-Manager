@model X.PagedList.IPagedList<HotelReservationManager.Models.Rooms>
@using PagedList.Core.Mvc;
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Index";
}

<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav flex-grow-1">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Manager" asp-action="Index">Home</a>
                </li>
            </ul>
        </div>
    </nav>
</header>

<h1>Rooms</h1>

<p>
    <a asp-action="Create">Create New Rooms</a>
</p>
@using (Html.BeginForm("Index", "Rooms", FormMethod.Get))
{
    <p>
        Search: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <thead>
        <tr>
            <td>
                @Html.ActionLink("RoomsCapacity", "Index", new { sortOrder = ViewBag.RoomsCapacitySortParm, currentFilter = ViewBag.CurrentFilter })
            </td>
            <td>
                @Html.ActionLink("RoomsType", "Index", new { sortOrder = ViewBag.RoomsTypeSortParm, currentFilter = ViewBag.CurrentFilter })
            </td>
            <td>
                @Html.ActionLink("Is_Available", "Index", new { sortOrder = ViewBag.Is_AvailableSortParm, currentFilter = ViewBag.CurrentFilter })
            </td>
            <td>
                Price_Adult
            </td>
                <td>
                Price_Child
            </td>
            <th></th>
        </tr>
    </thead>
<tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomsCapacity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoomsType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Is_Available)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price_Adult)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price_Child)
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.RoomsId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.RoomsId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.RoomsId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", 
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))